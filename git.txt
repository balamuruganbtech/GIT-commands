Migration SVN to GIT
--------------------------

SVN to Local Folder
-------------------
* git svn clone  https://appurl



Local to GIT repo first time
------------------------------
* git remote add origin  https://appurl
* git push -u origin --all 
* git push -u origin --tags 

Clone workspace for first time from GIT
-----------------------------------------
* git config --global http.proxy http://z024029:carter01@122.21.89.192:31223
* git -c http.sslVerify=false clone -b develop  https://appurl

If the above approach throws Authentication Failed Error then,
----------------------------------------------------------------
* git config --system --unset credential.helper
* After this command go to GitLab and click on Profile---->Access Tokens.
* Give a name for the Token, select the scope as api and click on Create personal access token button.
* Save the generated token in a file since every time we would need to input the token as password on doing this approach.
* git -c http.sslVerify=false clone -b develop  https://appurl
* Give the username as your zid. Password would be the token that was generated in the previous step.


Setting Proxy
--------------
* set http_proxy=http://z024029:carter01@122.21.89.192:31223
* set https_proxy=https://z024029:carter01@122.21.89.192:31223


Git Commands:
-------------
git clone -b <future branch>  https://appurl
Ex:
====
git clone -b 1.17_b2 https://appurl

git pull(=git fetch +git merge,to update the workspace with latest changes)
git stash(saves the current working files on a new stack and will not commit the changes so that we can switch to work on other branches to work)
git stash list (lists the stashes that has been done)
git stash apply <stash_id> (to bring a stash to current working directory)
git pull --rebase(=git fetch +git merge,if there is only one branch in a project)
git merge origin/develop (merges the code from develop to origin branch)
git status (to know the changes done)
git add <file_names> (to add the files to git repository)
git push (pushes the file into git repository)
git commit (commits the pushed files into git repository)
git revert --filename (Reverts the local changes in the file and updates the file from master)
git revert --hard (Reverts all the local changes done)
git checkout -b develop (Pulls the files from Developer branch when we are actually working on another branch)


git init
git config --list
git config --global user.name "Balamurugan Durairajan"
git config --global user.password "yEWNzvYy3nUD1A1YbgX4"
git clone  https://appurl ( Authenticate with GitHub using a token)
git status -s
git add . (add all folders with files to local repository)ut
git commit -m "initial commit"(local repository committed)
git pull origin master (it will check if already exisits commit means we have to take update and then commit)
git branch(show current branch)
git push

git clone -b 19.5_DEV3  https://appurl
